diff --git a/btool/makeinstall.sh b/btool/makeinstall.sh
index d3e158a..5dc96e5 100644
--- a/btool/makeinstall.sh
+++ b/btool/makeinstall.sh
@@ -3,13 +3,15 @@
 rm -rf build/
 mkdir build/
 mkdir build/maked
-cp tmplib build
 cp -rf sources/otagen/ build/
 cp -rf tmplib/* build/otagen/
 rm -rf tmplib
 cd sources/bin
 makej() {
 ../../btool/akb_cc -v -f $file.sh
+rm -f $file.sh.x.c
+cat $file.sh.x > ../../build/maked/akb_"$file"
+rm -rf $file.sh.x
 };
 e="\x1b[";c=$e"39;49;00m";y=$e"93;01m";cy=$e"96;01m";r=$e"1;91m";g=$e"92;01m";m=$e"95;01m";
 echo -e "$g  BUILDING BINARY$y"
@@ -17,27 +19,18 @@ sleep 3;
 # build binary
 file=build
 makej;
-rm -f $file.sh.x.c
-cat $file.sh.x > ../../build/maked/akb_"$file"
-rm -rf $file.sh.x
 # build prepare
 file=prepare_install
-makej;
+../../btool/akb_cc -v -f $file.sh
 rm -f $file.sh.x.c
 cat $file.sh.x > ../../build/maked/akb_prepare
 rm -rf $file.sh.x
 # build clean
 file=clean
 makej;
-rm -f $file.sh.x.c
-cat $file.sh.x > ../../build/maked/akb_"$file"
-rm -rf $file.sh.x
 # build init
 file=init
 makej;
-rm -f $file.sh.x.c
-cat $file.sh.x > ../../build/maked/akb_"$file"
-rm -rf $file.sh.x
 # build install
 cd ../../install
 file=installer
diff --git a/btool/makeproj.sh b/btool/makeproj.sh
index 553dd36..261c838 100755
--- a/btool/makeproj.sh
+++ b/btool/makeproj.sh
@@ -20,20 +20,20 @@ echo -e "$g  BUILDING BINARY$y"
 sleep 3;
 # build binary
 file=build
-makej;
-rm -f $file.sh.x.c
-cat $file.sh.x > ../../build/bin/akb_"$file"
-rm -rf $file.sh.x
+	makej;
+		rm -f $file.sh.x.c
+		cat $file.sh.x > ../../build/bin/akb_"$file"
+		rm -rf $file.sh.x
 # build prepare
 file=prepare
-makej;
-rm -f $file.sh.x.c
-cat $file.sh.x > ../../build/bin/akb_"$file"
-rm -rf $file.sh.x
+	makej;
+		rm -f $file.sh.x.c
+		cat $file.sh.x > ../../build/bin/akb_"$file"
+		rm -rf $file.sh.x
 # build clean
 file=clean
-makej;
-rm -f $file.sh.x.c
-cat $file.sh.x > ../../build/bin/akb_"$file"
-rm -rf $file.sh.x
+	makej;
+		rm -f $file.sh.x.c
+		cat $file.sh.x > ../../build/bin/akb_"$file"
+		rm -rf $file.sh.x
 cd ../
diff --git a/makefile b/makefile
index 830f458..02ca276 100644
--- a/makefile
+++ b/makefile
@@ -1,5 +1,5 @@
 prepare:
-	@bash ./prepare.sh
+	@bash ./btool/prepare.sh
 akb: prepare
 	@bash ./btool/build_btool.sh
 clean:
diff --git a/prepare.sh b/prepare.sh
deleted file mode 100644
index f56663d..0000000
--- a/prepare.sh
+++ /dev/null
@@ -1,13 +0,0 @@
-#!/bin/bash
-echo "MAKING bootimg_tools"
-sleep 3;
-mkdir tmplib/
-cd bootimg_tools
-make all
-cp -rf mkbootimg/mkbootimg ../tmplib
-cat mkbootimg/unmkbootimg > mkbootimg/unpackbootimg
-mv mkbootimg/unpackbootimg ../tmplib
-make clean
-echo "MAKING lz4"
-sleep 3;
-cd ../
diff --git a/sources/bin/build.sh b/sources/bin/build.sh
index 1643a37..7364d48 100755
--- a/sources/bin/build.sh
+++ b/sources/bin/build.sh
@@ -1,54 +1,90 @@
 #!/bin/bash
 # by fuldaros
-# Хрень какай-то
 ## FUNCTIONS START
 # CLEAN TMP
+export a1=$(sed -n 2p make.prop);
+export a2=$(sed -n 8p make.prop);
+export a3=$(sed -n 4p make.prop);
+export a4=$(date +"%Y.%m.%d %H:%M");
+export a5=$(date +"%d.%m.%Y-%H:%M");
+export a6=logb_"$stamp";
+export a7=ota_akb_"$stamp";
+export a8=$(sed -n 12p make.prop);
+export a9=$(sed -n 10p make.prop);
+export a10=$(sed -n 14p make.prop);
+export a11=$(sed -n 18p make.prop);
+export a12=$(sed -n 16p make.prop);
+export a13="1"
+ch1=$(sed -n 19p make.prop); 
+if $ch1 != ""
+	then
+		echo "FATAL! Bad make.prop"
+		exit;
+	else
 function cleantmp {
-rm -rf out/akb_"$device"/include/generated/compile.h
-rm -f zImage
-rm -f generated.info
-rm -f author.prop
+	rm -rf out/akb_"$device"/include/generated/compile.h
+	rm -f zImage
+	rm -f generated.info
+	rm -f author.prop
 };
-# CREATE VAR
-function createvar {
-usr=$(sed -n 2p make.prop);
-bh=$(sed -n 8p make.prop);
-arch=$(sed -n 4p make.prop);
-stamp=$(date +"%Y.%m.%d %H:%M");
-stampt=$(date +"%d.%m.%Y-%H:%M");
-logb=logb_"$stamp";
-otazip=ota_akb_"$stamp";
-device=$(sed -n 12p make.prop);
-cpu=$(sed -n 10p make.prop);
-imgt=$(sed -n 14p make.prop);
-loc=$(sed -n 18p make.prop);
-gcc=$(sed -n 16p make.prop);
-sha="1"
+
+# LINK VAR
+function linkvar {
+	usr=$a1
+	bh=$a2
+	arch=$a3
+	stamp=$a4
+	stampt=$a5
+	logb=$a6
+	otazip=$a7
+	device=$a8
+	cpu=$a9
+	imgt=$a10
+	loc=$a11
+	gcc=$a12
+	sha=$a13
 };
+
 # EXPORT
-function exportcm {
-export ARCH="$arch"
-export TARGET_ARCH="$arch"
-export KBUILD_BUILD_USER="$author"
-export KBUILD_BUILD_HOST="$bh"
+function exportmkval {
+	export ARCH="$arch"
+	export TARGET_ARCH="$arch"
+	export KBUILD_BUILD_USER="$author"
+	export KBUILD_BUILD_HOST="$bh"
 };
+
 # MAKE OTA PACK
 function mkota {
-echo -e "$g Собираем OTA пакет...$y"
-cat outkernel/"$kernel" > otagen/zImage
-cd otagen
-echo "ZIP file is generated automatically by fuldaros's script on "$stamp"
-Good luck!" > generated.info
-echo -e "$g Генерируем author.prop...$y"
-sleep 2
-cat ../make.prop > author.prop
-echo -e "# BUILD TIME" "\n""$stampt" >> author.prop
-echo -e "# AKB ver. (DONT EDIT)""\n""$ver" >> author.prop
-echo -e "#BUILD TYPE" "\n""$type" >> author.prop
-echo -e "$g Сжимаем...$y"
-sleep 3
-zip -r ../outzip/"$otazip".zip *
+	echo -e "$g Собираем OTA пакет...$y"
+	cat outkernel/"$kernel" > otagen/zImage
+	cd otagen
+	echo "ZIP file is generated automatically by fuldaros's script on "$stamp""\n"Good luck!" > generated.info
+	echo -e "$g Генерируем author.prop...$y"
+	sleep 2
+	cat ../make.prop > author.prop
+	echo -e "# BUILD TIME" "\n""$stampt" >> author.prop
+	echo -e "# AKB ver. (DONT EDIT)""\n""$ver" >> author.prop
+	echo -e "#BUILD TYPE" "\n""$type" >> author.prop
+	echo -e "$g Сжимаем...$y"
+	sleep 3
+	zip -r ../outzip/"$otazip".zip *
+};
+
+# Вывод информации о сборке
+function printinfo {
+echo -e "$cy******************************$y"
+echo -e "$g   Build info";
+echo -e "$y User: "$usr"
+ Host: "$bh"
+ ARCH: "$arch"
+ CPU: "$cpu"
+ Device: "$device"
+ Build time: "$stamp"
+ Kernel location: "$loc"
+ Build type: "$type"";
+echo -e "$cy******************************$y"
 };
+
 ## FUNCTIONS END
 ver=1.0;
 clear
@@ -63,30 +99,19 @@ sleep 3
 # Прерываем выполнение при появлении пошибки 
 set -e
 # Создание переменных
-createvar;
+linkvar;
 # Тип сборки (бесполезная хрень)
 if [[ "$sha" != "1" ]]
-then
-type="USER";
-else
-type="OFFICIAL";
+	then
+		type="USER";
+	else
+		type="OFFICIAL";
 fi
 # Еще переменная
 kernel="$imgt"_akb_"$stamp";
 # Экспортируем необходимые значения из make.prop
-exportcm;
-# Вывод информации о сборки
-echo -e "$cy******************************$y"
-echo -e "$g   Build info";
-echo -e "$y User: "$usr"
- Host: "$bh"
- ARCH: "$arch"
- CPU: "$cpu"
- Device: "$device"
- Build time: "$stamp"
- Kernel location: "$loc"
- Build type: "$type"";
-echo -e "$cy******************************$y"
+exportmkval;
+printinfo;
 sleep 4
 # Экспортируем gcc из make.prop
 export CROSS_COMPILE="$PWD"/gcc/bin/"$gcc"
@@ -94,7 +119,7 @@ cd sources/
 echo -e "$g Начинаем сборку ядра...$y"
 strt=$(date +"%s")
 # Сборка ядра :3
-make -j3 O=../out/akb_"$device" "$imgt" > ../outkernel/"$logb"
+make -j3 O=../out/akb_"$device" "$imgt"
 clear
 echo -e "
 $cy****************************************************
@@ -121,4 +146,5 @@ diff=$(( $end - $strt ))
 echo Операция выполнена успешно!
 sleep 2
 echo -e "$m Компиляция заняла "$diff" секунд!"
+fi
 ####### script v09 (beta)
diff --git a/sources/bin/init.sh b/sources/bin/init.sh
index 27e23cb..5ed4272 100644
--- a/sources/bin/init.sh
+++ b/sources/bin/init.sh
@@ -2,6 +2,7 @@
 echo " Please wait...";
 mkdir ../tmp
 mv * ../tmp
+sleep 2;
 cp -rf /usr/otagen ./
 mkdir sources
 mkdir gcc
@@ -22,7 +23,7 @@ device_here
 // Image type (zImage/Image/Image.gz-dtb/...)
 image_type_here
 // GCC perfix
-gcc__perfix_here
-// Kernel location
-kernel_location_here" > make.prop
+gcc_perfix_here
+// Boot.img location
+boot.img_location_here" > make.prop
 echo " Done!";
diff --git a/sources/bin/prepare.sh b/sources/bin/prepare.sh
index f2fa589..5eeb3e9 100755
--- a/sources/bin/prepare.sh
+++ b/sources/bin/prepare.sh
@@ -1,6 +1,19 @@
 #!/bin/bash
 # by fuldaros
 # EXPORT
+export a1=$(sed -n 2p make.prop);
+export a2=$(sed -n 8p make.prop);
+export a3=$(sed -n 4p make.prop);
+export a4=$(date +"%Y.%m.%d %H:%M");
+export a5=$(date +"%d.%m.%Y-%H:%M");
+export a6=logb_"$stamp";
+export a7=ota_akb_"$stamp";
+export a8=$(sed -n 12p make.prop);
+export a9=$(sed -n 10p make.prop);
+export a10=$(sed -n 14p make.prop);
+export a11=$(sed -n 18p make.prop);
+export a12=$(sed -n 16p make.prop);
+export a13="1"
 function exportcm {
 export ARCH="$arch"
 export TARGET_ARCH="$arch"
@@ -9,10 +22,10 @@ export KBUILD_BUILD_HOST="$bh"
 };
 clear
 ver=1.0;
-device=$(sed -n 12p make.prop);
 e="\x1b[";c=$e"39;49;00m";y=$e"93;01m";cy=$e"96;01m";r=$e"1;91m";g=$e"92;01m";m=$e"95;01m";
 conf=$(sed -n 6p make.prop);
-arch=$(sed -n 4p make.prop);
+arch=$a3
+device=$a8
 echo -e "
 $cy****************************************************
 $cy*           Automatic kernel builder v"$ver"          *
